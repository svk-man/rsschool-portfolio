import i18nObj from "./translate.js";

let lang = 'en';
let theme = 'black';
function setLocalStorage() {
  localStorage.setItem('lang', lang);
  localStorage.setItem('theme', theme);
}

function getLocalStorage() {
  if (localStorage.getItem('lang')) {
    lang = localStorage.getItem('lang');
    getTranslate(lang);
  }

  if (localStorage.getItem('theme')) {
    theme = localStorage.getItem('theme');
    getTheme(theme);
  }
}

window.addEventListener('beforeunload', setLocalStorage);
window.addEventListener('load', getLocalStorage);

const langSwitcher = document.querySelector('.lang-switcher');
langSwitcher.addEventListener('click', changeLang);

function changeLang(event) {
  const currentLangSwitcherBtn = event.target;
  const isCurrentLangSwitcherBtn = currentLangSwitcherBtn.classList.contains('lang-switcher__btn');
  if (isCurrentLangSwitcherBtn) {
    const currentLang = currentLangSwitcherBtn.dataset.lang;
    getTranslate(currentLang);
    lang = currentLang;

    const langSwitcherBtns = langSwitcher.querySelectorAll('.lang-switcher__btn');
    langSwitcherBtns.forEach(langSwitcherBtn => { langSwitcherBtn.classList.remove('lang-switcher__btn--active'); });

    currentLangSwitcherBtn.classList.add('lang-switcher__btn--active');
  }
}

function getTranslate(lang = 'ru') {
  const i18nElements = document.querySelectorAll('[data-i18n]');
  i18nElements.forEach(i18nElement => {
    const i18nElementKey = i18nElement.dataset.i18n;
    const i18nElementValue = i18nObj[lang][i18nElementKey];
    const isI18nElementKeyExists = i18nElementValue !== undefined;
    if (isI18nElementKeyExists) {
      if (i18nElement.placeholder) {
        i18nElement.placeholder = i18nElementValue;
        i18nElement.textContent = '';
      } else if (i18nElement.value) {
        i18nElement.value = i18nElementValue;
        i18nElement.textContent = '';
      } else {
        i18nElement.textContent = i18nElementValue;
      }
    }
  });
}

const themeChangeButton = document.querySelector('.theme-change');
themeChangeButton.addEventListener('click', changeTheme);

function changeTheme(event) {
  const isWhiteTheme = event.target.classList.contains('white-theme');
  theme = isWhiteTheme ? 'black' : 'white';
  getTheme(theme);
}

function getTheme(theme = 'white') {
  const isWhiteTheme = theme === 'white';

  const whiteThemeElementSelectors = ['body', '.hero-section', '.header__container', '.nav__link', '.lang-switcher',
  '.lang-switcher__btn', '.btn', '.section-title', '.section-title__inner', '.skills-section__item',
  '.price-section__item-price', '.contacts-section', '.contacts-section__field', '.footer__link', '.socials__link-icon',
  '.theme-change', '.hamburger', '.nav'];
  const whiteThemeElements = document.querySelectorAll(whiteThemeElementSelectors.join(', '));
  whiteThemeElements.forEach(whiteThemeElement => { 
    isWhiteTheme ? whiteThemeElement.classList.add('white-theme') : whiteThemeElement.classList.remove('white-theme');
  });

  const logoImg = document.querySelector('.logo__img');
  logoImg.src = `./assets/svg/logo${(isWhiteTheme) ? '-white' : ''}.svg`;

  const priceSectionItemBtns = document.querySelectorAll('.price-section__item-btn');
  priceSectionItemBtns.forEach(priceSectionItemBtn => {
    if (!isWhiteTheme) {
      priceSectionItemBtn.classList.remove('btn--light');
      priceSectionItemBtn.classList.add('btn--dark');
    } else {
      priceSectionItemBtn.classList.remove('btn--dark');
      priceSectionItemBtn.classList.add('btn--light');
    }
  });
}

const hamburger = document.querySelector('.hamburger');
const navigation = document.querySelector('.nav');

hamburger.addEventListener('click', function() {
  this.classList.toggle('hamburger--active');
  navigation.classList.toggle('nav--show');
});

navigation.addEventListener('click', function(event) {
  if (event.target.classList.contains('nav__link')) {
    hamburger.classList.remove('hamburger--active');
    navigation.classList.remove('nav--show');
  }
});

const portfolioButtonsParent = document.querySelector('.portfolio-section__buttons');
const portfolioPhotos = document.querySelectorAll('.portfolio-section__photo');
portfolioButtonsParent.addEventListener('click', changeImages);

function changeImages(event) {
  const portfolioButton = event.target;
  const isPortfolioButton = event.target.classList.contains('portfolio-section__button');
  if(isPortfolioButton) {
    const season = portfolioButton.dataset.season;
    portfolioPhotos.forEach((item, index) => { item.src = `./assets/img/photos/${season}/${index + 1}.jpg`} );

    snowfallSeason = season;
    setSnowfall(false);
    if (snowfallPlay) {
      setSnowfall(true);
    }

    const portfolioButtons = Array.from(portfolioButtonsParent.children);
    portfolioButtons.forEach(item => { item.classList.remove('portfolio-section__button--active'); });
    portfolioButton.classList.add('portfolio-section__button--active');
  }
}

const seasons = ['winter', 'spring', 'summer', 'autumn'];
function preloadImages() {
  seasons.forEach(item => {
    for(let i = 1; i <= 6; i++) {
      const img = new Image();
      img.src = `./assets/img/photos/${item}/${i}.jpg`;
    }
  });
}

preloadImages();

const animateButton = function(event) {
  event.preventDefault;

  event.target.classList.remove('animate');
  event.target.classList.add('animate');
  setTimeout(function(){
    event.target.classList.remove('animate');
  },700);
};

const bubblyButtons = document.querySelectorAll('.btn--bubbly');
bubblyButtons.forEach(bubblyButton => bubblyButton.addEventListener('click', animateButton));

let snowfallPlay = false;
let snowfallSeason = 'autumn';
const snowfallChangeButton = document.querySelector('.snowfall-change');
snowfallChangeButton.addEventListener('click', changeSnowfall);

function changeSnowfall(event) {
  snowfallPlay = !snowfallPlay;
  setSnowfall(snowfallPlay);
}

function setSnowfall(play = true) {
  const snowfallElement = document.querySelector('.snowfall');

  if (play) {
    const snowfallSize = 3;
    const snowfallIcons = {
      'autumn': ['üçÇ', 'üçÅ', 'üçÑ', 'ü¶î', 'üåß'],
      'spring': ['üåº', 'üå∏', 'üå≥', '‚õÖÔ∏è', 'üê¶'],
      'summer': ['üêû', 'üåû', 'üçâ', 'üçì', 'üêù'],
      'winter': ['‚õÑÔ∏è', '‚ùÑÔ∏è', 'üéÖ', 'üéÑ', 'ü¶å'],
    };

    let snowfallElementHtml = '';
    for (let i = 0; i < snowfallSize; i++) {
      snowfallIcons[snowfallSeason].forEach(snowfallIcon => {
        snowfallElementHtml += `<snowflake><span>${snowfallIcon}</span>Ô∏èÔ∏è</snowflake>`;
      });
    }

    snowfallElement.innerHTML = snowfallElementHtml;
    document.body.append(snowfallElement);
  } else {
    snowfallElement.innerHTML = '';
  }
}

console.log('%c–°–º–µ–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Å–µ–∫—Ü–∏–∏ `portfolio` +25', 'color: green; font-size: 16px');
console.log('–ø—Ä–∏ –∫–ª–∏–∫–∞—Ö –ø–æ –∫–Ω–æ–ø–∫–∞–º `Winter`, `Spring`, `Summer`, `Autumn` –≤ —Å–µ–∫—Ü–∏–∏ `portfolio` –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º +20');
console.log('–∫–Ω–æ–ø–∫–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∫–ª–∏–∫–Ω—É–ª–∏, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π —Ç.–µ. –≤—ã–¥–µ–ª—è–µ—Ç—Å—è —Å—Ç–∏–ª–µ–º. –î—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ —ç—Ç–æ–º –±—É–¥—É—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ +5');
console.log('%c–ü–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –¥–≤–∞ —è–∑—ã–∫–∞ +25', 'color: green; font-size: 16px');
console.log('–ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –Ω–∞–¥–ø–∏—Å–∏ `ru` –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ +10');
console.log('–ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –Ω–∞–¥–ø–∏—Å–∏ `en` —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ +10');
console.log('–Ω–∞–¥–ø–∏—Å–∏ `en` –∏–ª–∏ `ru`, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–∫—É—â–µ–º—É —è–∑—ã–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Ç.–µ. –≤—ã–¥–µ–ª—è—é—Ç—Å—è —Å—Ç–∏–ª–µ–º +5');
console.log('%c–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–ª–æ–π –∏ —Ç—ë–º–Ω–æ–π —Ç–µ–º—ã +25', 'color: green; font-size: 16px');
console.log('–í—ã–±—Ä–∞–Ω–∞ 2 –º–∞–∫–µ—Ç');
console.log('–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–æ–±–∞–≤–ª–µ–Ω –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É:');
console.log('-   —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–º–µ–Ω—è–µ—Ç—Å—è —Å–≤–µ—Ç–ª–æ–π +10');
console.log('-   —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–º–µ–Ω—è–µ—Ç—Å—è —Ç—ë–º–Ω–æ–π +10');
console.log('-   –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã —Å–≤–µ—Ç–ª–æ–π –∏ —Ç—ë–º–Ω–æ–π —Ç–µ–º—ã –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –∏–∑–º–µ–Ω—è—é—Ç –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∏ –∫–ª–∏–∫–µ –∏ –ø—Ä–∏ —ç—Ç–æ–º –æ—Å—Ç–∞—é—Ç—Å—è –≤–∏–¥–∏–º—ã–º–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–Ω–µ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏ —Å –±–µ–ª—ã–º —à—Ä–∏—Ñ—Ç–æ–º –Ω–∞ –±–µ–ª–æ–º —Ñ–æ–Ω–µ) +5');
console.log('%c–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —è–∑—ã–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ —Å–≤–µ—Ç–ª–∞—è –∏–ª–∏ —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã +5', 'color: green; font-size: 16px');
console.log('%c–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: —Å–ª–æ–∂–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∏/–∏–ª–∏ –∫–ª–∏–∫–µ +5', 'color: green; font-size: 16px');
console.log('%c–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: —Å–Ω–µ–≥–æ–ø–∞–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–µ–∑–æ–Ω–∞, –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ', 'color: green; font-size: 16px');
console.log('%c–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: 85', 'color: green; font-size: 16px');
